/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/articles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 記事一覧情報取得API
         * @description 記事一覧の情報を取得する
         */
        get: operations["articlesGet"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/articles/{article-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 記事情報取得API
         * @description 記事IDを指定して単一記事の詳細情報を取得する
         */
        get: operations["articleGet"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * @description リクエストID（UUIDv4形式）
         * @example 123e4567-e89b-12d3-a456-426614174000
         */
        RequestID: string;
        ArticlesGetResponseBody: {
            articles: components["schemas"]["ArticleSummary"][];
        };
        ArticleGetResponseBody: {
            article: components["schemas"]["ArticleDetail"];
        };
        ArticleSummary: {
            id: components["schemas"]["ArticleId"];
            published_at: components["schemas"]["ArticlePublishedAt"];
            title: components["schemas"]["ArticleTitle"];
            tags: components["schemas"]["ArticleTags"];
        };
        ArticleDetail: {
            id: components["schemas"]["ArticleId"];
            published_at: components["schemas"]["ArticlePublishedAt"];
            updated_at: components["schemas"]["ArticleUpdatedAt"];
            title: components["schemas"]["ArticleTitle"];
            contents: components["schemas"]["ArticleContents"];
            tags: components["schemas"]["ArticleTags"];
        };
        /**
         * @description 記事ID（ハイフン無しのUUIDv4形式）
         * @example 123e4567e89b12d3a456426655440000
         */
        ArticleId: string;
        /**
         * @description 記事タイトル
         * @example Go言語入門
         */
        ArticleTitle: string;
        /**
         * @description 記事内容（マークダウン形式）
         * @example # 入門チャプター
         *     - 標準出力
         *     - 変数と定数
         *     - 条件分岐
         *     - ループ
         *
         */
        ArticleContents: string;
        /**
         * Format: date-time
         * @description 公開日時（UTC）
         * @example 2025-01-15T12:00:00Z
         */
        ArticlePublishedAt: string;
        /**
         * Format: date-time
         * @description 更新日時（UTC）
         * @example 2025-01-15T12:00:00Z
         */
        ArticleUpdatedAt: string;
        /**
         * @description タグ
         * @example [
         *       "Go",
         *       "JavaScript",
         *       "AWS"
         *     ]
         */
        ArticleTags: string[];
        Error: {
            code: components["schemas"]["ErrorCode"];
            /**
             * @description エラーメッセージ
             * @example internal server error
             */
            message: string;
            /**
             * @description エラーの詳細情報
             * @example {
             *       "code": "internal_server_error",
             *       "message": "internal server error",
             *       "detail": "server is busy"
             *     }
             */
            details?: {
                [key: string]: string;
            };
        };
        /**
         * @description エラーコード
         * @enum {string}
         */
        ErrorCode: "internal_server_error" | "not_found";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: {
        /** @description リクエストID */
        RequestID: components["schemas"]["RequestID"];
    };
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    articlesGet: {
        parameters: {
            query?: {
                /** @description 公開年でフィルタリング */
                "publish-year"?: number;
                /** @description タグでフィルタリング（複数指定可能）
                 *      */
                tags?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    "X-Request-ID": components["headers"]["RequestID"];
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticlesGetResponseBody"];
                };
            };
            /** @description サーバーエラー */
            500: {
                headers: {
                    "X-Request-ID": components["headers"]["RequestID"];
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    articleGet: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description 記事ID（ハイフン無しのUUIDv4形式）
                 * @example 123e4567e89b12d3a456426655440000
                 */
                "article-id": string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功 */
            200: {
                headers: {
                    "X-Request-ID": components["headers"]["RequestID"];
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ArticleGetResponseBody"];
                };
            };
            /** @description 指定IDの記事が存在しない場合 */
            404: {
                headers: {
                    "X-Request-ID": components["headers"]["RequestID"];
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description サーバーエラー */
            500: {
                headers: {
                    "X-Request-ID": components["headers"]["RequestID"];
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
